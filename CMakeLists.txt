
CMAKE_MINIMUM_REQUIRED(VERSION 3.17.0)

PROJECT(Bazinga-Compiler)

MESSAGE(${PROJECT_SOURCE_DIR})

# compile options
ADD_COMPILE_OPTIONS(-std=c++17)

SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/libs)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR})

# bin
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/bin BIN_DIR)
ADD_LIBRARY(Bin_lib STATIC  ${BIN_DIR})
TARGET_INCLUDE_DIRECTORIES(Bin_lib  PUBLIC  ${PROJECT_SOURCE_DIR}/include/bin)

# symbols
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/symbols/units/terminals      TERMINALS_DIR)
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/symbols/units/nonterminals   NONTERMINALS_DIR)
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/symbols/units                UNITS_DIR)
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/symbols                      SYMBOLS_DIR)
ADD_LIBRARY(Units_lib     STATIC  ${UNITS_DIR} ${TERMINALS_DIR} ${NONTERMINALS_DIR})
ADD_LIBRARY(Symbols_lib   STATIC  ${SYMBOLS_DIR})
TARGET_INCLUDE_DIRECTORIES(Units_lib
  PUBLIC  ${PROJECT_SOURCE_DIR}/include/symbols/units
  PUBLIC  ${PROJECT_SOURCE_DIR}/include/symbols/units/terminals
  PUBLIC  ${PROJECT_SOURCE_DIR}/include/symbols/units/nonterminals
)
TARGET_INCLUDE_DIRECTORIES(Symbols_lib  PUBLIC  ${PROJECT_SOURCE_DIR}/include/symbols)

# lexer
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/lexer LEXER_DIR)
ADD_LIBRARY(Lexer_lib STATIC  ${LEXER_DIR})
TARGET_INCLUDE_DIRECTORIES(Lexer_lib  PUBLIC  ${PROJECT_SOURCE_DIR}/include/lexer)

# parser
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/parser PARSER_DIR)
ADD_LIBRARY(Parser_lib STATIC  ${PARSER_DIR})
TARGET_INCLUDE_DIRECTORIES(Parser_lib  PUBLIC  ${PROJECT_SOURCE_DIR}/include/parser)

# execute
ADD_EXECUTABLE(Bazinga ${PROJECT_SOURCE_DIR}/src/Run.cpp)

# link all namespaces to Bazinga
TARGET_LINK_LIBRARIES(Units_lib     PUBLIC  Bin_lib)
TARGET_LINK_LIBRARIES(Symbols_lib   PUBLIC  Units_lib)
TARGET_LINK_LIBRARIES(Lexer_lib     PUBLIC  Symbols_lib)
TARGET_LINK_LIBRARIES(Parser_lib    PUBLIC  Lexer_lib)
TARGET_LINK_LIBRARIES(Bazinga       PUBLIC  Parser_lib)
